{"version":3,"file":"component---src-pages-about-js-a7fbb7f883646826c5cd.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./node_modules/browser-monads/lib/index.js","webpack://gatsby-starter-hello-world/./node_modules/nothing-mock/dist/nothing-mock.es.js","webpack://gatsby-starter-hello-world/./src/images/squared_avatar.jpg","webpack://gatsby-starter-hello-world/./src/puzzle/Tile.js","webpack://gatsby-starter-hello-world/./src/puzzle/Board.js","webpack://gatsby-starter-hello-world/./src/puzzle/Refresh.js","webpack://gatsby-starter-hello-world/./src/puzzle/Puzzle.js","webpack://gatsby-starter-hello-world/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://gatsby-starter-hello-world/./src/pages/about.js"],"sourcesContent":["'use strict';\n\nvar _require = require('nothing-mock'),\n  Nothing = _require.Nothing,\n  isNothing = _require.isNothing;\nvar win = typeof window !== 'undefined' ? window : Nothing;\nvar doc = typeof document !== 'undefined' ? document : Nothing;\nmodule.exports.window = win;\nmodule.exports.document = doc;\nmodule.exports.exists = function (variable) {\n  return !isNothing(variable);\n};","var n,\n  r = ((n = function n() {\n    return r;\n  }).toString = n.toLocaleString = n[Symbol.toPrimitive] = function () {\n    return \"\";\n  }, n.valueOf = function () {\n    return !1;\n  }, new Proxy(Object.freeze(n), {\n    get: function get(n, t) {\n      return n.hasOwnProperty(t) ? n[t] : r;\n    }\n  })),\n  t = function t(n) {\n    return !(!n || !n.valueOf());\n  },\n  u = function u(n) {\n    return n === r;\n  },\n  e = function e(n) {\n    return !(n === r || null == n);\n  },\n  o = function o(n) {\n    return JSON.stringify(n, function (n, t) {\n      return t === r ? null : t;\n    });\n  },\n  i = function i(n) {\n    return JSON.parse(n, function (n, t) {\n      return null === t ? r : t;\n    });\n  };\nexport { r as Nothing, i as deserialize, u as isNothing, e as isSomething, o as serialize, t as toBool };","export default __webpack_public_path__ + \"static/squared_avatar-bc3ca2e1579ca39a7df689f4609ad545.jpg\";","import React,{Component} from 'react';\r\n\r\nexport default class Tile extends Component{\r\n    render(){\r\n\r\n        if(this.props.img)\r\n        {\r\n            return(\r\n                <div style={this.props.style} className=\"tile\" key={this.props.originalIndex} onClick={() => {this.props.clickHandler(this.props.currentIndex)}}>\r\n                    <img src={this.props.img} alt=\"tile\"/>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div style={this.props.style} className=\"tile\" key={this.props.originalIndex} onClick={() => {this.props.clickHandler(this.props.currentIndex)}}>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport Tile from './Tile';\r\n\r\nexport default function Board({tileArray,showTime,tileStyle,boardStyle}) {\r\n\r\n    const [tiles,setTiles] = useState([]);\r\n    const [blank,setBlank] = useState(8);\r\n    const [solved,setSolved] = useState(false);\r\n    const [lastTileImg,setLastTileImg] = useState({});\r\n\r\n    useEffect(() => {\r\n        if(tileArray.length > 0){\r\n            let tileCompArray = tileArray.map((imgg,ind) => {\r\n                return {\r\n                    imgg : imgg,\r\n                    currentIndex : ind,\r\n                    originalIndex : ind\r\n                };\r\n            });\r\n    \r\n            tileCompArray.sort(() => Math.random() - 0.5);\r\n    \r\n            tileCompArray.forEach((tile,ind) => {\r\n                tile.currentIndex = ind;\r\n                return tile;\r\n            });\r\n\r\n            let missingTile = Math.floor(Math.random()*tileCompArray.length);\r\n            let missingTileImg = tileCompArray[missingTile].imgg;\r\n            tileCompArray[missingTile].imgg = null;\r\n    \r\n            if(!isSolvable(tileCompArray)){\r\n                // console.log(\"The puzzle cannot be solved\");\r\n                // console.log(\"Tile array length : \"+tiles.length);\r\n                tileCompArray = makeSolvable(tileCompArray);\r\n                // console.log(isSolvable(tileCompArray) ? \"Can be now\" : \"Still nope\");\r\n            }\r\n            // else{\r\n            //     console.log(\"The puzzle can be solved.\")\r\n            // }\r\n    \r\n            setTiles(tileCompArray);\r\n            setSolved(false);\r\n            setBlank(missingTile);\r\n            setLastTileImg(missingTileImg);\r\n        }\r\n    },[tileArray]);\r\n\r\n    useEffect(() => {\r\n        if(!solved && tiles.length>0 && isBoardValid()){\r\n            tiles[blank].imgg = lastTileImg;\r\n            setTiles([...tiles]);\r\n            setSolved(true);\r\n        }\r\n        // else{\r\n        //     console.log(\"Can be solved!\");\r\n        // }\r\n\r\n    },[tiles,blank]);\r\n\r\n    const swapTiles = (arr,i,j) => {\r\n\r\n        let tempTile = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = tempTile;\r\n\r\n        arr[j].currentIndex = j;\r\n        arr[i].currentIndex = i;\r\n\r\n        return arr;\r\n    }\r\n\r\n    const isSolvable = (arr) => {\r\n        return countInversions(arr)%2===0;\r\n    }\r\n\r\n    const countInversions = (arr) => {\r\n        let inv = 0;\r\n\r\n        for(let i=0;i<arr.length - 1;i++){\r\n            for(let j=i+1;j<arr.length;j++){\r\n                if(arr[i].imgg && arr[j].imgg && arr[i].originalIndex > arr[j].originalIndex){\r\n                    inv++;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // console.log(\"INV count \"+inv);\r\n        return inv;\r\n    }\r\n\r\n    const makeSolvable = (tileCompArray) => {\r\n        if(!tileCompArray[0].imgg || !tileCompArray[1].imgg){\r\n            return swapTiles(tileCompArray,7,8);\r\n        }\r\n        return swapTiles(tileCompArray,0,1);\r\n    }\r\n\r\n    const tileHandler = (ind) => {\r\n        \r\n        let dir = -1;\r\n\r\n        if(ind%3!==2 && ind+1 === blank)\r\n            dir = 1;\r\n        else if(ind%3!==0 && ind-1 === blank)\r\n            dir = 3;\r\n        else if(ind>2 && ind-3 === blank)\r\n            dir = 0;\r\n        else if(ind<6 && ind+3 === blank)\r\n            dir = 2;\r\n\r\n        let msg = \"\";\r\n\r\n        switch(dir){\r\n            case 0 : msg = \"Move up\";\r\n            break;\r\n            case 1 : msg = \"Move right\";\r\n            break;\r\n            case 2 : msg = \"Move down\";\r\n            break;\r\n            case 3 : msg = \"Move left\";\r\n            break;\r\n            default : msg = \"No neighboring blank cell\"\r\n        }\r\n\r\n        // console.log(msg);\r\n        // console.log(\"Blank is at \"+blank);\r\n        // console.log(\"--------------\");\r\n\r\n        //swapping\r\n        if(!solved && dir!==-1){\r\n            // console.log(\"---Before swapping---\");\r\n            // console.log(\"Current index is = \"+ind);\r\n            // console.log(\"Blank index is = \"+blank);\r\n\r\n            // let tempTile = tiles[blank];\r\n            // tiles[blank] = tiles[ind];\r\n            // tiles[ind] = tempTile;\r\n\r\n            // tiles[ind].currentIndex = ind;\r\n            // tiles[blank].currentIndex = blank;\r\n\r\n            setBlank(ind);\r\n            setTiles([...swapTiles(tiles,blank,ind)]);\r\n        }      \r\n    }\r\n\r\n    const isBoardValid = () => {\r\n        return tiles.length>1 && tiles.reduce((prev, cur) => {\r\n            return prev && cur.currentIndex === cur.originalIndex;\r\n        },true);\r\n    }\r\n\r\n    return (\r\n    <div className=\"board\" style={solved ? boardStyle : {}}>\r\n        {\r\n            tiles.map(tile => {\r\n                return(\r\n                    <Tile style={solved ? {} : tileStyle} img={tile.imgg} key={tile.originalIndex} currentIndex={tile.currentIndex} originalIndex={tile.originalIndex} clickHandler={tileHandler}/>\r\n                )\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ({clickHandler}) {\r\n  return (\r\n    <div className=\"refresh\">\r\n        <div className=\"icon\" onClick={clickHandler}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-clockwise\" viewBox=\"0 0 16 16\">\r\n                <path fillRule=\"evenodd\" d=\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\"/>\r\n                <path d=\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\"/>\r\n            </svg>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport img from \"./../images/squared_avatar.jpg\";\r\nimport Board from './Board';\r\nimport Refresh from './Refresh';\r\nimport { document } from 'browser-monads';\r\nimport * as styles from './index.css';\r\n\r\nexport default class Puzzle extends React.Component{\r\n    image = null;\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.state = {imagePieces : [], canShow : false};\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(typeof window !== undefined){\r\n            this.image = new Image();\r\n            this.image.src = img;\r\n            this.image.onload = this.cutImageUp;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"puzzle\">\r\n                <Refresh clickHandler={this.refresh}/>\r\n                <Board tileArray={this.state.imagePieces} tileStyle = {{border : \"0.5px rgb(255, 255, 255) solid\"}} boardStyle={{maxWidth : \"301px\"}}/>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    refresh(){\r\n        this.setState({\r\n            imagePieces : [...this.state.imagePieces]\r\n        });\r\n    }\r\n\r\n    cutImageUp = () => {\r\n        let pieces = [];\r\n        const rows = 3;\r\n        const cols = 3;\r\n        const len = this.image.width/3;\r\n    \r\n        for(var x = 0; x < rows; x++) {\r\n            for(var y = 0; y < cols; y++) {\r\n                var canvas = document.createElement('canvas');\r\n                canvas.width = 100;\r\n                canvas.height = 100;\r\n                var context = canvas.getContext('2d');\r\n                context.drawImage(this.image, y * len, x * len,len,len, 0, 0, canvas.width, canvas.height);\r\n                pieces.push(canvas.toDataURL());\r\n            }\r\n        }\r\n        \r\n        this.setState({imagePieces : pieces});\r\n    }\r\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import React from 'react';\r\nimport Puzzle from '../puzzle/Puzzle';\r\n\r\nexport default function About() {\r\n    return (\r\n      <div>\r\n        <section id=\"about\" className=\"about\">\r\n            <div className=\"display\">   \r\n              <Puzzle/>\r\n            </div>\r\n            <div className=\"description\">\r\n                <h1>Hola, I'm Amal</h1>\r\n                <ul className=\"custom-list\">\r\n                    <li>I'm a software engineer based out of Bengaluru, India.</li>\r\n                    <li>Dabbling into the world of open source.</li>\r\n                    <li>I try to keep plants alive.</li>\r\n                    <li>Been thinking of climbing a mountain ever since I read <a href=\"https://www.goodreads.com/book/show/1898.Into_Thin_Air\" target = \"_blank\" rel=\"noreferrer\">this.</a></li>\r\n                </ul>\r\n                <br/>\r\n                <p>I'm passionate about creative software, good stories and new places. Always open to new book and music recommendations.</p>\r\n\r\n                <h3>Wanna collaborate on something cool? Hit me up on LinkedIn or Twitter.</h3>\r\n            </div>\r\n        </section>\r\n        <section id=\"work\" className=\"work\">\r\n          <div>\r\n            <h1>Work 👨‍💼</h1>\r\n            <h4>Some of the projects I've worked on, in and out of college.</h4>\r\n          </div>\r\n          <div className=\"projects\">\r\n            <div className=\"project\">\r\n            <a href=\"https://amal329.github.io/pong-game-js/\" target = \"_blank\" rel=\"noreferrer\">\r\n              <h4>Pong - Browser game</h4>\r\n              <p>A humble attempt at recreating the classic Pong game, written in vanilla JavaScript along with some HTML and CSS. Also contains a compelling opponent.</p>\r\n            </a>\r\n            </div>\r\n            <div className=\"project\">\r\n              <h4>Flashcard based revision system</h4>\r\n              <p>A flashcard-based revision system that makes use of spaced repetition to aid in revising topics, built using React and Firebase.</p>\r\n            </div>\r\n            <div className=\"project\">\r\n              <h4>BST Visualizer</h4>\r\n              <p>A BST visualizer written in JavaScript using the D3 visualization library that simulates all operations on a binary search tree.</p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section id=\"skills\" className=\"skill-sec\">\r\n          <div>\r\n            <h1>Skills 👨‍🔧</h1>\r\n            <h4>Technologies I've picked up over the years.</h4>\r\n          </div>\r\n          <div className=\"skills\">\r\n            <div className=\"skill\">\r\n              <h4>Frontend</h4>\r\n              <ul>\r\n                <li>React</li>\r\n                <li>Bootstrap</li>\r\n                <li>HTML and CSS</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"skill\">\r\n              <h4>Backend</h4>\r\n              <ul>\r\n                <li>Node.js</li>\r\n                <li>Spring Boot</li>\r\n                <li>MySQL</li>\r\n                <li>MongoDB</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"skill\">\r\n              <h4>Languages</h4>\r\n              <ul>\r\n                <li>JavaScript</li>\r\n                <li>Java</li>\r\n                <li>C/C++</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["_require","Nothing","isNothing","win","window","doc","document","module","exports","n","r","toString","toLocaleString","Symbol","toPrimitive","valueOf","Proxy","Object","freeze","get","t","hasOwnProperty","u","e","o","JSON","stringify","i","parse","Tile","render","this","props","img","style","className","key","originalIndex","onClick","clickHandler","currentIndex","src","alt","Component","Board","tileArray","tileStyle","showTime","boardStyle","useState","tiles","setTiles","blank","setBlank","solved","setSolved","lastTileImg","setLastTileImg","useEffect","length","tileCompArray","map","imgg","ind","sort","Math","random","forEach","tile","missingTile","floor","missingTileImg","isSolvable","makeSolvable","isBoardValid","swapTiles","arr","j","tempTile","countInversions","inv","tileHandler","dir","reduce","prev","cur","xmlns","width","height","fill","viewBox","fillRule","d","Puzzle","image","componentDidMount","undefined","Image","onload","cutImageUp","pieces","len","x","y","canvas","getContext","drawImage","push","toDataURL","setState","imagePieces","refresh","bind","self","ReferenceError","state","canShow","Refresh","border","maxWidth","React","About","id","href","target","rel"],"sourceRoot":""}